"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9809],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),g=r,y=c["".concat(l,".").concat(g)]||c[g]||d[g]||o;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},513:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(8168),r=(n(6540),n(5680));const o={},i="Views and Routes",s={unversionedId:"documentation/views-and-routes/overview",id:"documentation/views-and-routes/overview",title:"Views and Routes",description:"In Zelthy, the concepts of Views and Routes closely align with the principles you'd find in Django, a popular Python web framework. These two components are fundamental in defining how your healthcare app responds to incoming requests and how it presents information to users.",source:"@site/docs/documentation/views-and-routes/overview.mdx",sourceDirName:"documentation/views-and-routes",slug:"/documentation/views-and-routes/overview",permalink:"/docs/docs/documentation/views-and-routes/overview",draft:!1,editUrl:"https://github.com/Healthlane-Technologies/zelthy3/tree/documentation/docs/docs/documentation/views-and-routes/overview.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Registering a Module",permalink:"/docs/docs/documentation/modules/registering-a-module"},next:{title:"Creating a View",permalink:"/docs/docs/documentation/views-and-routes/creating-a-view"}},l={},u=[{value:"Views",id:"views",level:2},{value:"Routes",id:"routes",level:2},{value:"Advantages of Zelthy Views and Routes",id:"advantages-of-zelthy-views-and-routes",level:2},{value:"Uses of Views and Routes",id:"uses-of-views-and-routes",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"views-and-routes"},"Views and Routes"),(0,r.yg)("p",null,"In Zelthy, the concepts of Views and Routes closely align with the principles you'd find in Django, a popular Python web framework. These two components are fundamental in defining how your healthcare app responds to incoming requests and how it presents information to users."),(0,r.yg)("h2",{id:"views"},"Views"),(0,r.yg)("p",null,"Views in Zelthy, much like in Django, are Python functions or classes responsible for processing incoming web requests and returning web responses. These responses can take various forms, including:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"HTTP Response:")," A straightforward HTTP response can be returned to the client, providing data or content directly.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"HTML Template Response:")," You can render HTML templates and return them as a response, allowing you to dynamically generate web pages with dynamic content.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"HTTP Redirect Response:")," Views can also issue HTTP redirects to direct users to another page or URL."))),(0,r.yg)("p",null,"Views in Zelthy are an essential part of defining your app's logic. They handle user interactions, business logic, and the presentation of data."),(0,r.yg)("h2",{id:"routes"},"Routes"),(0,r.yg)("p",null,"Routes, in the context of Zelthy, are URLs that map to specific views in your healthcare app. These URLs are used to display particular web pages in the user's browser. Routes in Zelthy are quite similar to Django routes and play a vital role in directing the user to the appropriate view."),(0,r.yg)("h2",{id:"advantages-of-zelthy-views-and-routes"},"Advantages of Zelthy Views and Routes"),(0,r.yg)("p",null,"Zelthy's Views and Routes offer several advantages over traditional Django Views:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Integration with Zelthy Framework:")," Zelthy Views seamlessly integrate with the Zelthy framework, allowing you to leverage additional features and functionality specific to the healthcare enterprise ecosystem.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Smart Routing:")," Zelthy provides smart routing capabilities, such as automatically redirecting users to a login page if they are not authenticated. This simplifies authentication and access control in your healthcare app."))),(0,r.yg)("h2",{id:"uses-of-views-and-routes"},"Uses of Views and Routes"),(0,r.yg)("p",null,"Views and Routes are essential for various aspects of your healthcare app:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"User Interface:")," Views are responsible for rendering the user interface, presenting data to users, and responding to their interactions.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Business Logic:")," Views encapsulate the business logic of your app, handling user input, processing data, and generating responses.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Authentication and Authorization:")," Routes and Views work together to implement authentication and authorization mechanisms, ensuring that only authorized users can access specific parts of the app.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Data Presentation:")," Views can format and present data to users in a user-friendly manner, enhancing the overall user experience."))),(0,r.yg)("p",null,"In summary, Views and Routes in Zelthy are at the core of defining how your healthcare app interacts with users and how it presents information. They enable you to create dynamic, user-friendly, and secure web applications tailored to the healthcare enterprise environment."))}d.isMDXComponent=!0}}]);