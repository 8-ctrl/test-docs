"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1021],{5680:(e,t,r)=>{r.d(t,{xA:()=>s,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,y=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(y,i(i({ref:t},s),{},{components:r})):n.createElement(y,i({ref:t},s))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2604:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(8168),a=(r(6540),r(5680));const o={sidebar_label:"Docker"},i="Installing Zelthy with Docker",l={unversionedId:"documentation/getting-started/installing-zelthy/docker",id:"documentation/getting-started/installing-zelthy/docker",title:"Installing Zelthy with Docker",description:"Prerequisites",source:"@site/docs/documentation/getting-started/installing-zelthy/docker.mdx",sourceDirName:"documentation/getting-started/installing-zelthy",slug:"/documentation/getting-started/installing-zelthy/docker",permalink:"/docs/docs/documentation/getting-started/installing-zelthy/docker",draft:!1,editUrl:"https://github.com/Healthlane-Technologies/zelthy3/tree/documentation/docs/docs/documentation/getting-started/installing-zelthy/docker.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Docker"},sidebar:"docsSidebar",previous:{title:"Manual",permalink:"/docs/docs/documentation/getting-started/installing-zelthy/manual"},next:{title:"Accessing the App Panel",permalink:"/docs/docs/documentation/getting-started/accessing-app-panel"}},p={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2}],s={toc:c},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"installing-zelthy-with-docker"},"Installing Zelthy with Docker"),(0,a.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("p",null,"To begin using Zelthy through Docker installation, ensure that Docker and Docker Compose are installed on your machine. If not, follow the installation instructions for ",(0,a.yg)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,a.yg)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose"),"."),(0,a.yg)("h2",{id:"steps"},"Steps"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Clone the Zelthy3 repository:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/zelthy/zelthy3.git\ncd zelthy3\n"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Run the following command from the root folder of the project:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python zel_setup.py --build_core\n")),(0,a.yg)("p",{parentName:"li"},"Use the ",(0,a.yg)("inlineCode",{parentName:"p"},"--build_core")," option to build the Zelthy library for the first time. Subsequent projects can omit this step.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"This creates a project named ",(0,a.yg)("inlineCode",{parentName:"p"},"zelthy_project")," in the ",(0,a.yg)("inlineCode",{parentName:"p"},"zproject")," folder in the same directory.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Customize the project creation using optional arguments:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python zel_setup.py --project_name my_project --project_dir /path/to/my_project --server runserver --build_core --platform_username user@example.com --platform_user_password secret --skip_build_project\n")),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--project_name"),": Modifies the name of the project (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"zelthy_project"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--project_dir"),": Specifies the directory for project creation (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"zproject"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--server"),": Specifies the server to be used to run the project (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"runserver"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--build_core"),": Builds the Zelthy library (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"False"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--platform_username"),": The user email of the platform user (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"zelthy@mail.com"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--platform_user_password"),": The password for the platform user (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"Zelthy@123"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--skip_build_project"),": Skips building the project (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"False"),")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"--start"),": Starts the project as soon as it is created (Default: ",(0,a.yg)("inlineCode",{parentName:"li"},"False"),")"))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"To install any Zelthy package, add ",(0,a.yg)("inlineCode",{parentName:"p"},"AWS_ACCESS_KEY_ID")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"AWS_SECRET_ACCESS_KEY")," to the ",(0,a.yg)("inlineCode",{parentName:"p"},".env")," file created in the ",(0,a.yg)("inlineCode",{parentName:"p"},"project_dir")," and restart the containers.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Subsequently, you can use ",(0,a.yg)("inlineCode",{parentName:"p"},"docker compose up")," from the ",(0,a.yg)("inlineCode",{parentName:"p"},"project_dir")," to start the project."))),(0,a.yg)("h1",{id:"rebuilding-core"},"Rebuilding Core"),(0,a.yg)("p",null,"If you modify somehting in the core of the project, to rebuild it run the following command from the root of the zelthy3 project"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python zel_setup.py --project_dir <project_dir> --rebuild_core\n")),(0,a.yg)("p",null,"you can then run ",(0,a.yg)("inlineCode",{parentName:"p"},"docker compose up")," from the project directory to start the project"))}m.isMDXComponent=!0}}]);