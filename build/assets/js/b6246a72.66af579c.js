"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6593],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=d(a),p=i,y=u["".concat(s,".").concat(p)]||u[p]||m[p]||o;return a?n.createElement(y,l(l({ref:t},c),{},{components:a})):n.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,l=new Array(o);l[0]=p;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var d=2;d<o;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5938:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var n=a(8168),i=(a(6540),a(5680));const o={},l="Models",r={unversionedId:"documentation/ddms/overview",id:"documentation/ddms/overview",title:"Models",description:"Zelthy Data Model is a powerful feature designed to meet the specific needs of multi-tenant systems. This innovative concept allows you to define different data models for each tenant within the same application, making Zelthy a versatile platform for building multi-tenant applications.",source:"@site/docs/documentation/ddms/overview.mdx",sourceDirName:"documentation/ddms",slug:"/documentation/ddms/overview",permalink:"/docs/docs/documentation/ddms/overview",draft:!1,editUrl:"https://github.com/Healthlane-Technologies/zelthy3/tree/documentation/docs/docs/documentation/ddms/overview.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Templates",permalink:"/docs/docs/documentation/templates/overview"},next:{title:"Creating a Model",permalink:"/docs/docs/documentation/ddms/creating-a-ddm"}},s={},d=[{value:"Multi-Tenant System",id:"multi-tenant-system",level:4},{value:"Data Models",id:"data-models",level:2},{value:"1. Tenant-Specific Data Structures",id:"1-tenant-specific-data-structures",level:4},{value:"2. Isolated Data",id:"2-isolated-data",level:4},{value:"3. Cost Savings",id:"3-cost-savings",level:4},{value:"4. Scalability",id:"4-scalability",level:4},{value:"5. Customization",id:"5-customization",level:4},{value:"6. Flexibility",id:"6-flexibility",level:4}],c={toc:d},u="wrapper";function m(e){let{components:t,...a}=e;return(0,i.yg)(u,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"models"},"Models"),(0,i.yg)("p",null,"Zelthy Data Model is a powerful feature designed to meet the specific needs of multi-tenant systems. This innovative concept allows you to define different data models for each tenant within the same application, making Zelthy a versatile platform for building multi-tenant applications."),(0,i.yg)("h4",{id:"multi-tenant-system"},"Multi-Tenant System"),(0,i.yg)("p",null,"A multi-tenant system is an architecture where a single software application serves multiple clients, known as tenants. Each tenant operates independently within the same application, with its own data, configuration, and customizations. Multi-tenancy is commonly used in scenarios where several clients or organizations share the same software instance while keeping their data and settings isolated."),(0,i.yg)("h2",{id:"data-models"},"Data Models"),(0,i.yg)("p",null,"Models in Zelthy take the multi-tenant concept a step further. You can define unique data structures, or data models, for each tenant in your multi-tenant system. These data models can include tables, fields, relationships, and rules, allowing each tenant to have a tailored data schema that suits its specific requirements."),(0,i.yg)("p",null,"Key features of Data Models in Zelthy include:"),(0,i.yg)("h4",{id:"1-tenant-specific-data-structures"},"1. Tenant-Specific Data Structures"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Each tenant can have its own set of data models and tables."),(0,i.yg)("li",{parentName:"ul"},"Custom data models can be defined and updated on the fly without affecting other tenants.")),(0,i.yg)("h4",{id:"2-isolated-data"},"2. Isolated Data"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Data for each tenant is stored separately, ensuring data security and isolation."),(0,i.yg)("li",{parentName:"ul"},"Tenants cannot access or modify data structures of other tenants.")),(0,i.yg)("h4",{id:"3-cost-savings"},"3. Cost Savings"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Utilizing a single database for multiple applications reduces infrastructure costs."),(0,i.yg)("li",{parentName:"ul"},"Maintenance and management are streamlined, as you manage one database instead of maintaining separate databases for each tenant.")),(0,i.yg)("h4",{id:"4-scalability"},"4. Scalability"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Easily scale your multi-tenant application by adding new tenants with their own data models."),(0,i.yg)("li",{parentName:"ul"},"Accommodate different business needs and workflows for various clients or organizations.")),(0,i.yg)("h4",{id:"5-customization"},"5. Customization"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Tenants can define and customize their data models to meet their unique requirements."),(0,i.yg)("li",{parentName:"ul"},"Adapt the application to different industries, use cases, or user groups.")),(0,i.yg)("h4",{id:"6-flexibility"},"6. Flexibility"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Developers can work on individual tenant data models independently, facilitating rapid development and updates."),(0,i.yg)("li",{parentName:"ul"},"Data models can evolve as tenant needs change, ensuring long-term flexibility.")),(0,i.yg)("p",null,"Data Models in Zelthy empower you to create versatile and cost-effective multi-tenant applications that adapt to the diverse requirements of your clients or organizations. This innovative feature sets Zelthy apart as a robust platform for building and scaling multi-tenant systems."))}m.isMDXComponent=!0}}]);