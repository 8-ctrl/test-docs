"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1617],{5680:(e,i,o)=>{o.d(i,{xA:()=>p,yg:()=>f});var r=o(6540);function n(e,i,o){return i in e?Object.defineProperty(e,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[i]=o,e}function t(e,i){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);i&&(r=r.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var i=1;i<arguments.length;i++){var o=null!=arguments[i]?arguments[i]:{};i%2?t(Object(o),!0).forEach((function(i){n(e,i,o[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(o,i))}))}return e}function a(e,i){if(null==e)return{};var o,r,n=function(e,i){if(null==e)return{};var o,r,n={},t=Object.keys(e);for(r=0;r<t.length;r++)o=t[r],i.indexOf(o)>=0||(n[o]=e[o]);return n}(e,i);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)o=t[r],i.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=r.createContext({}),l=function(e){var i=r.useContext(c),o=i;return e&&(o="function"==typeof e?e(i):s(s({},i),e)),o},p=function(e){var i=l(e.components);return r.createElement(c.Provider,{value:i},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var i=e.children;return r.createElement(r.Fragment,{},i)}},m=r.forwardRef((function(e,i){var o=e.components,n=e.mdxType,t=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(o),m=n,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||t;return o?r.createElement(f,s(s({ref:i},p),{},{components:o})):r.createElement(f,s({ref:i},p))}));function f(e,i){var o=arguments,n=i&&i.mdxType;if("string"==typeof e||n){var t=o.length,s=new Array(t);s[0]=m;var a={};for(var c in i)hasOwnProperty.call(i,c)&&(a[c]=i[c]);a.originalType=e,a[u]="string"==typeof e?e:n,s[1]=a;for(var l=2;l<t;l++)s[l]=o[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},713:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=o(8168),n=(o(6540),o(5680));const t={},s="Policies",a={unversionedId:"documentation/permission-framework/policies/overview",id:"documentation/permission-framework/policies/overview",title:"Policies",description:"Policies are the cornerstone of access control within the Zelthy platform, governing how permissions are assigned and managed. Understanding policies is essential for orchestrating user access to different resources.",source:"@site/docs/documentation/permission-framework/policies/overview.mdx",sourceDirName:"documentation/permission-framework/policies",slug:"/documentation/permission-framework/policies/overview",permalink:"/docs/docs/documentation/permission-framework/policies/overview",draft:!1,editUrl:"https://github.com/Healthlane-Technologies/zelthy3/tree/documentation/docs/docs/documentation/permission-framework/policies/overview.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Permission Framework",permalink:"/docs/docs/documentation/permission-framework/overview"},next:{title:"Viewing Policies",permalink:"/docs/docs/documentation/permission-framework/policies/viewing-policies"}},c={},l=[{value:"Policy Overview",id:"policy-overview",level:2},{value:"Configurations in Policies",id:"configurations-in-policies",level:2},{value:"Expiry Configuration",id:"expiry-configuration",level:3}],p={toc:l},u="wrapper";function d(e){let{components:i,...o}=e;return(0,n.yg)(u,(0,r.A)({},p,o,{components:i,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"policies"},"Policies"),(0,n.yg)("p",null,"Policies are the cornerstone of access control within the Zelthy platform, governing how permissions are assigned and managed. Understanding policies is essential for orchestrating user access to different resources."),(0,n.yg)("h2",{id:"policy-overview"},"Policy Overview"),(0,n.yg)("p",null,"Policies serve as blueprints that dictate the allocation of permissions to users and user roles. Permissions are organized within policies, allowing you to fine-tune access to various resources according to your application's needs."),(0,n.yg)("p",null,"As mentioned earlier, permissions are initialized through policies. A policy can contain one or more permissions, which collectively define the scope of actions a user or user role can perform."),(0,n.yg)("h2",{id:"configurations-in-policies"},"Configurations in Policies"),(0,n.yg)("p",null,"Policies, much like permissions, are configurable entities that can be tailored to suit specific access scenarios. These configurations allow you to fine-tune the behavior of policies according to your application's requirements."),(0,n.yg)("h3",{id:"expiry-configuration"},"Expiry Configuration"),(0,n.yg)("p",null,"One noteworthy configuration is the ",(0,n.yg)("strong",{parentName:"p"},"Expiry")," setting. This allows you to define an expiration date for the policy. After the expiry date, the policy becomes invalid, rendering any user or user role associated with it unable to access resources granted by the policy. This configuration adds a temporal dimension to access control, enhancing the security and relevance of policies."),(0,n.yg)("p",null,"By leveraging policy configurations, you ensure that access to resources remains aligned with your evolving needs while maintaining security and compliance."))}d.isMDXComponent=!0}}]);